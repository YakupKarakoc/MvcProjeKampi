@model EntityLayer.Concreate.Writer

@{
    ViewBag.Title = "AddWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>YENİ YAZAR EKLEME</h1>
<br />

@using (Html.BeginForm("AddWriter", "Writer", FormMethod.Post))
{
<div class="form-group">
    <div class="form-group">
        @Html.LabelFor(x => x.WriterName, "Yazar adı:")
        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterName)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.WriterSurname, "Yazar soyadı:")
        @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterSurname)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.WriterMail, "Yazar mail:")
        @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterMail)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.WriterPassword, "Yazar şifresi:")
        @Html.PasswordFor(x => x.WriterPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterPassword)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.WriterImage, "Görsel Linki:")
        @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterImage)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.WriterAbout, "Yazar hakkında:")
        @Html.TextAreaFor(x => x.WriterAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterAbout)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.WriterAbout, "Yazar başlığı:")
        @Html.TextAreaFor(x => x.WriterTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterTitle)
    </div>

    <br /><br />
    <button class="btn btn-success">Yazarı ekle</button>
</div>
}
